
name: Build Sigil AppImage

on:
  workflow_dispatch:

env:
  PY_VER: 3.13
  PY_VER2: 3.13.2
  QT_VER: 6.8.2
  DOWNLOADQT: https://github.com/dougmassay/win-qtwebkit-5.212/releases/download/v5.212-1/AppImageWebEngine682.tar.xz

jobs:

  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: master

    - name: Checkout Sigil
      uses: actions/checkout@v4
      with:
        repository: Sigil-Ebook/Sigil
        ref: master
        fetch-depth: 0
        path: sigilsrc

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PY_VER2}}

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{env.QT_VER}}
        dir: ${{runner.workspace}}/Qt
        modules: 'qtpositioning qtpdf qtwebchannel qtserialport qtimageformats'
        setup-python: 'false'
        cache: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Install patched QtWebEngine
      run: |
        curl -L -o qtwebengine.tar.xz "$DOWNLOADQT"
        tar -xJvf qtwebengine.tar.xz -C ${{runner.workspace}}/Qt
    
    - uses: lukka/get-cmake@latest

    - name: Package Python
      run: |
        which python3
        mkdir ${{runner.workspace}}/build
        pip install patchelf
        pip install -r $GITHUB_WORKSPACE/sigilsrc/.github/workflows/requirements.txt
        python3 $GITHUB_WORKSPACE/sigilsrc/.github/workflows/appimg_python3_gather.py ${{runner.workspace}}/build/sigil.AppDir $PY_VER

    - name: Install dependencies
      run: |
        sudo apt-get install -y mesa-common-dev libglu1-mesa-dev libxcb-cursor-dev libgtk-3-dev libtiff-dev libwebp-dev
        which cmake
        cmake --version
        which ninja
        ninja --version
        which qmake
        qmake -v
        which python3
        python3 --version
        gcc --version
        cd ${{runner.workspace}}/build
        wget -nv https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        wget -nv https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod +x linuxdeploy-plugin-qt-x86_64.AppImage
        wget -nv https://github.com/linuxdeploy/linuxdeploy-plugin-appimage/releases/download/continuous/linuxdeploy-plugin-appimage-x86_64.AppImage
        chmod +x linuxdeploy-plugin-appimage-x86_64.AppImage
        cp /lib/x86_64-linux-gnu/libtiff.so.5 ${{runner.workspace}}/build/sigil.AppDir/usr/lib/
        cp /lib/x86_64-linux-gnu/libwebp.so.7 ${{runner.workspace}}/build/sigil.AppDir/usr/lib/


    - name: Build Sigil
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE/sigilsrc \
        -G "Ninja" \
        -DCMAKE_PREFIX_PATH=${QT_ROOT_DIR}/lib/cmake \
        -DPKG_SYSTEM_PYTHON=1 \
        -DAPPIMAGE_BUILD=1 \
        -DCMAKE_BUILD_TYPE=Release \
        -DINSTALL_HICOLOR_ICONS=1 \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DCMAKE_SKIP_RPATH=ON
        ninja
        DESTDIR=sigil.AppDir ninja install
    
    - name: Make AppImage
      working-directory: ${{runner.workspace}}/build
      run: |
        DEPLOY_PLATFORM_THEMES=1 \
        DISABLE_COPYRIGHT_FILES_DEPLOYMENT=1 \
        LD_LIBRARY_PATH=lib:sigil.AppDir/usr/lib/python$PY_VER/site-packages/pillow.libs:$LD_LIBRARY_PATH \
        ./linuxdeploy-x86_64.AppImage --appdir sigil.AppDir --plugin qt
        python3 $GITHUB_WORKSPACE/sigilsrc/.github/workflows/appimg_cleanup.py ${{runner.workspace}}/build/sigil.AppDir/usr/lib $PY_VER
        cp -f $GITHUB_WORKSPACE/sigilsrc/.github/workflows/AppRun ${{runner.workspace}}/build/sigil.AppDir/
        LDAI_UPDATE_INFORMATION="gh-releases-zsync|dougmassay|Sigil-AppImage|continuous|Sigil-*x86_64.AppImage.zsync"
        ./linuxdeploy-plugin-appimage-x86_64.AppImage --appdir=sigil.AppDir
     
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: AppImage-artifact
        path: ${{runner.workspace}}/build/Sigil-x86_64.AppImage
        retention-days: 8

  upload:
    name: Create release and upload artifacts
    needs:
      - build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage ./**/Sigil*.AppImage*
